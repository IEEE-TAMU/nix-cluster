apiVersion: v1
kind: Namespace
metadata:
  name: email
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kumo-policy
  namespace: email
data:
  init.lua: |
    local kumo = require 'kumo'
    local shaping = require 'policy-extras.shaping'
    local dkim_sign = require 'policy-extras.dkim_sign'
    local queue_module = require 'policy-extras.queue'
    local listener_domains = require 'policy-extras.listener_domains'

    local dkim_signer =
      dkim_sign:setup { '/opt/kumomta/etc/policy/dkim_data.toml' }

    local queue_helper =
      queue_module:setup { '/opt/kumomta/etc/policy/queues.toml' }

    kumo.on('init', function()
      -- Listen on port 25
      kumo.start_esmtp_listener {
        listen = '0:25',
        -- allow all clients to send mail
        relay_hosts = { '0.0.0.0/0' },
      }

      -- Define the default "data" spool location.
      kumo.define_spool {
        name = 'data',
        path = '/tmp/kumo-spool/data',
      }

      -- Define the default "meta" spool location.
      kumo.define_spool {
        name = 'meta',
        path = '/tmp/kumo-spool/meta',
      }

      -- Configure bounce classification.
      -- See https://docs.kumomta.com/userguide/configuration/bounce/
      kumo.configure_bounce_classifier {
        files = {
          '/opt/kumomta/share/bounce_classifier/iana.toml',
        },
      }

      kumo.configure_local_logs {
        log_dir = '/var/log/kumomta',

        -- We recommend setting this when you're getting started;
        -- this option is discussed in more detail below
        max_segment_duration = '10 seconds',
      }
    end)

    -- Configure listener domains for relay, oob bounces, and FBLs using the
    -- listener_domains.lua policy helper.
    -- WARNING: THIS WILL NOT LOAD WITHOUT THE listener_domains.toml FILE IN PLACE
    -- SEE https://docs.kumomta.com/userguide/configuration/smtplisteners/
    kumo.on(
      'get_listener_domain',
      listener_domains:setup { '/opt/kumomta/etc/policy/listener_domains.toml' }
    )

    -- Configure traffic shaping using the shaping.lua policy helper.
    kumo.on('get_egress_path_config', shaping:setup { '/opt/kumomta/share/policy-extras/shaping.toml' })

    -- Processing of incoming messages via SMTP
    kumo.on('smtp_server_message_received', function(msg)
        -- Protect against SMTP Smuggling (https://sec-consult.com/blog/detail/smtp-smuggling-spoofing-e-mails-worldwide/)
        local failed = msg:check_fix_conformance(
          -- check for and reject messages with these issues:
          'NON_CANONICAL_LINE_ENDINGS',
          -- fix messages with these issues:
          ''
        )
        if failed then
          kumo.reject(552, string.format('5.6.0 %s', failed))
        end
        -- Call the queue helper to set up the queue for the message.
        queue_helper:apply(msg)
        -- SIGNING MUST COME LAST OR YOU COULD BREAK YOUR DKIM SIGNATURES
        dkim_signer(msg)
      end)
  listener_domains.toml: |
    # allow all clients to send mail from ieeetamu.org
    ["ieeetamu.org"]
    relay_from = ["0.0.0.0/0"]
  dkim_data.toml: |
    [base]
    # Automatic oversigning can help prevent certain DKIM replay attacks by asserting
    # absence of any additional copies of a given header.
    over_sign = true

    # Domain blocks match based on the sender domain of the
    # incoming message
    [domain."ieeetamu.org"]
    selector = 'cluster'
    headers = ["From", "To", "Subject", "Date", "Sender"]
    algo = "sha256" # or "ed25519". Omit to use the default of "sha256"

    # optional overridden filename.
    # Default is "/opt/kumomta/etc/dkim/DOMAIN/SELECTOR.key"
    # filename = "/full/path/to/key."
  queues.toml: |
    # Set the tenant from this header and delete the header for added security
    tenant_header = "X-Tenant"
    remove_tenant_header = true

    # The tenant to use if no tenant_header is present
    default_tenant = "cluster"

    [tenant.'cluster']

    # The default set of parameters
    [queue.default]
    max_age = '24 hours'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kumo
  namespace: email
spec:
  selector:
    matchLabels:
      app: kumo
  replicas: 1
  template:
    metadata:
      labels:
        app: kumo
    spec:
      containers:
        - name: kumo
          image: ghcr.io/kumocorp/kumomta:latest
          volumeMounts:
            - name: kumo-policy
              mountPath: /opt/kumomta/etc/policy
            - name: kumo-dkim-secrets
              mountPath: /opt/kumomta/etc/dkim/ieeetamu.org
            - name: kumo-spool
              mountPath: /tmp/kumo-spool
      volumes:
        - name: kumo-policy
          configMap:
            name: kumo-policy
        - name: kumo-dkim-secrets
          secret:
            secretName: kumo-dkim-secrets
        - name: kumo-spool
          emptyDir: {}
